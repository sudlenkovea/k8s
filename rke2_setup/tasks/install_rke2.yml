---
- name: Determine RKE2 installation type
  set_fact:
    rke_type: "{{ 'server' if inventory_hostname in groups['masters'] else 'agent' }}"

- name: Create remote RKE2 artifacts directory
  ansible.builtin.file:
    path: "{{ rke2_remote_install_path }}"
    state: directory
    mode: '0755'

- name: Copy RKE2 install script to remote hosts
  ansible.builtin.copy:
    src: "{{ rke2_local_download_path }}/install.sh"
    dest: "{{ rke2_remote_install_path }}/install.sh"
    mode: '0755'

- name: Copy RKE2 binary archive to remote hosts
  ansible.builtin.copy:
    src: "{{ rke2_local_download_path }}/rke2.linux-amd64.tar.gz"
    dest: "{{ rke2_remote_install_path }}/rke2.linux-amd64.tar.gz"
    mode: '0644'

- name: Copy RKE2 images archive to remote hosts
  ansible.builtin.copy:
    src: "{{ rke2_local_download_path }}/rke2-images.linux-amd64.tar.zst"
    dest: "{{ rke2_remote_install_path }}/rke2-images.linux-amd64.tar.zst"
    mode: '0644'

- name: Copy RKE2 checksums to remote hosts
  ansible.builtin.copy:
    src: "{{ rke2_local_download_path }}/sha256sum-amd64.txt"
    dest: "{{ rke2_remote_install_path }}/sha256sum-amd64.txt"
    mode: '0644'

- name: Install RKE2 (Server or Agent) based on node role
  ansible.builtin.shell: |
    sudo INSTALL_RKE2_ARTIFACT_PATH="{{ rke2_remote_install_path }}" INSTALL_RKE2_TYPE="{{ rke_type }}" bash {{ rke2_remote_install_path }}/install.sh
  args:
    creates: "/usr/local/lib/systemd/system/rke2-{{ rke_type }}.service"

- name: Clean up remote artifacts directory
  ansible.builtin.file:
    path: "{{ rke2_remote_install_path }}"
    state: absent
